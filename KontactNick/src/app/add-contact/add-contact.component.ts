import { Component, Inject, OnInit } from '@angular/core';
import { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';
import { CategoryService } from '../services/category.service';
import { AuthService } from '../services/auth.service'; // ‚úÖ –î–æ–±–∞–≤–ª–µ–Ω –∏–º–ø–æ—Ä—Ç AuthService
import { CommonModule } from '@angular/common';
import { FormsModule } from '@angular/forms'; // ‚úÖ –î–ª—è ngModel –∏ ngForm
import { MatFormFieldModule } from '@angular/material/form-field'; // ‚úÖ –î–ª—è mat-form-field
import { MatInputModule } from '@angular/material/input'; // ‚úÖ –î–ª—è matInput
import { MatButtonModule } from '@angular/material/button'; // ‚úÖ –î–ª—è –∫–Ω–æ–ø–æ–∫
import { MatDialogModule } from '@angular/material/dialog'; // ‚úÖ –î–ª—è —Ä–∞–±–æ—Ç—ã —Å –¥–∏–∞–ª–æ–≥–∞–º–∏

@Component({
  selector: 'app-add-contact-dialog', // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω—ã–π —Å–µ–ª–µ–∫—Ç–æ—Ä
  templateUrl: './add-contact.component.html',
  standalone: true,
  styleUrls: ['./add-contact.component.css'],
  imports: [
    CommonModule,
    FormsModule,
    MatFormFieldModule,
    MatInputModule,
    MatButtonModule,
    MatDialogModule
  ]
})
export class AddContactDialogComponent implements OnInit {
  categoryId: number;
  fields: any[] = [];
  contactData: any = { nick: '', currentUserNick: '' }; // ‚úÖ –ù–∏–∫–Ω–µ–π–º—ã —Å—Ä–∞–∑—É –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º

  constructor(
    private dialogRef: MatDialogRef<AddContactDialogComponent>,
    @Inject(MAT_DIALOG_DATA) public data: any,
    private categoryService: CategoryService,
    private authService: AuthService // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º AuthService
  ) {
    this.categoryId = data.categoryId;
  }

  ngOnInit(): void {
    // ‚úÖ –ü–æ–ª—É—á–∞–µ–º –Ω–∏–∫ —Ç–µ–∫—É—â–µ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    this.authService.getUserProfile().subscribe(profile => {
      if (profile && profile.nick) {
        this.contactData.currentUserNick = profile.nick;
      }
    });

    // ‚úÖ –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–æ–ª—è –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
    this.loadFields();
  }

  loadFields(): void {
    // ‚úÖ –ò—Å–ø–æ–ª—å–∑—É–µ–º API-–∑–∞–ø—Ä–æ—Å –≤–º–µ—Å—Ç–æ –∑–∞–≥–ª—É—à–∫–∏
    this.categoryService.getCategoryFields(this.categoryId).subscribe({
      next: (fields) => {
        this.fields = fields;
        console.log("‚úÖ Fields loaded:", fields);
      },
      error: (err) => {
        console.error("‚ùå Error loading fields:", err);
      }
    });
  }

  save(): void {
    // ‚úÖ –î–æ–±–∞–≤–ª—è–µ–º –ø—Ä–æ–≤–µ—Ä–∫—É –Ω–∞ –∑–∞–ø–æ–ª–Ω–µ–Ω–Ω–æ—Å—Ç—å –Ω–∏–∫–∞ –ø–µ—Ä–µ–¥ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ–º
    if (!this.contactData.nick.trim()) {
      alert("‚ö†Ô∏è Please enter a valid nick!");
      return;
    }

    console.log('üì§ Saving contact:', this.contactData);
    this.dialogRef.close(this.contactData);
  }

  close(): void {
    this.dialogRef.close();
  }
}
